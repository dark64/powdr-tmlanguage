{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Powdr",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#machine"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "machine": {
      "patterns": [
        {
          "name": "meta.machine",
          "begin": "\\b(machine)\\s+",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.machine.powdr"
            }
          },
          "end": "(?<=\\})",
          "patterns": [
            {
              "name": "entity.name.type.machine.powdr",
              "match": "[a-zA-Z_][a-zA-Z$_0-9@]*"
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.curlybrace.open.powdr"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "punctuation.curlybrace.close.powdr"
                }
              },
              "patterns": [
                {
                  "include": "#statements"
                }
              ]
            }
          ]
        }
      ]
    },
    "statements": {
      "patterns": [
        { "include": "#declarations" },
        { "include": "#degree" },
        { "include": "#submachine" },
        { "include": "#inline-pil" },
        { "include": "#comments" }
      ]
    },
    "declarations": {
      "patterns": [
        { "include": "#register-declaration" },
        { "include": "#instruction-declaration" },
        { "include": "#function-declaration" }
      ]
    },
    "register-declaration": {
      "name": "meta.register.declaration.powdr",
      "begin": "\\b(reg)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.reg.powdr"
        }
      },
      "end": "(?=;)",
      "patterns": [
        {
          "name": "entity.name.variable.register.powdr",
          "match": "[a-zA-Z_][a-zA-Z$_0-9@]*"
        },
        {
          "match": "(?:\\[(<=|@pc)\\])?(?:\\s*)",
          "captures": {
            "1": {
              "name": "meta.register.flag.powdr"
            }
          }
        }
      ]
    },
    "instruction-declaration": {
      "name": "meta.instruction.declaration.powdr",
      "begin": "\\b(instr)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.instr.powdr"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "name": "entity.name.function.instr.powdr",
          "match": "[a-zA-Z_][a-zA-Z$_0-9@]*"
        },
        { "include": "#instruction-params" },
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.curlybrace.open.powdr"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.curlybrace.close.powdr"
            }
          },
          "patterns": [{ "include": "#instruction-body" }]
        }
      ]
    },
    "instruction-params": {
      "patterns": []
    },
    "instruction-body": {
      "patterns": []
    },
    "function-declaration": {
      "patterns": []
    },
    "degree": {
      "patterns": []
    },
    "submachine": {
      "patterns": []
    },
    "inline-pil": {
      "patterns": []
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.powdr",
          "match": "\\s*//.*"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.powdr",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.powdr",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.powdr.asm"
}
